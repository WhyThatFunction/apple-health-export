global:
  version: main3b4852ef4c0b4e157d4ddc4e6f07aa7da7d21096

defaultPodOptions:
  securityContext:
    runAsUser: 1001
    runAsGroup: 1001

controllers:
  main:
    type: deployment
    replicas: 2
    pod:
      labels:
        main: apple-health-export-app
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - apple-health-export-app
              topologyKey: "kubernetes.io/hostname"
    labels:
      main: main-app
    podLabels:
      app: open-web-ui
    containers:
      app:
        image:
          repository: ghcr.io/whythatfunction/apple-health-export
          tag: '{{ .Values.global.version }}'
          pullPolicy: IfNotPresent

        resources:
          requests:
            cpu: 125m
            memory: 256Mi
          limits:
            cpu: 400m
            memory: 512Mi

        env:
          AHE_BUCKET: ahe-test
          AHE_PREFIX: ~
          AHE_PORT: 8080
          AHE_S3_PATH_STYLE: true

          AHE_BASIC_USER:
            secretKeyRef:
              name: ahe-basic
              key: username

          AHE_BASIC_PASS:
            secretKeyRef:
              name: ahe-basic
              key: password

          AWS_ENDPOINT_URL: http://minio:9000
          AWS_ALLOW_HTTP: ~
          AWS_REGION: ~
          AWS_ACCESS_KEY_ID:
            secretKeyRef:
              name: minio
              key: access-key

          AWS_SECRET_ACCESS_KEY:
            secretKeyRef:
              name: minio
              key: secret-key

          OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: grpc
          OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://jaeger:4317
          OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: grpc
          OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: http://jaeger:4317
          RUST_LOG: "info,aws_config=warn,aws_smithy_runtime=warn,hyper=warn,tower_http=info"

        probes:
          startup:
            enabled: true
            spec:
              initialDelaySeconds: 0
              periodSeconds: 5

          readiness:
            enabled: true
            custom: true
            spec:
              exec:
                command:
                  - /usr/local/bin/ahe-healthcheck
              initialDelaySeconds: 1
              periodSeconds: 5

          liveness:
            enabled: true
            custom: true
            spec:
              exec:
                command:
                  - /usr/local/bin/ahe-healthcheck
              initialDelaySeconds: 1
              periodSeconds: 5

service:
  app:
    enabled: true
    annotations: { }
    nameOverride: service
    type: ClusterIP
    controller: main
    ports:
      http:
        enabled: true
        port: 8080
        targetPort: 8080

ingress:
  app:
    enabled: true
    annotations: { }
    nameOverride: ingress
    #className: 'nginx'
    hosts:
      - host: apple-health-export.example.com
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: app
              port: http
    tls:
      - secretName: apple-health-export-example-com-secret
        hosts:
          - apple-health-export.example.com
